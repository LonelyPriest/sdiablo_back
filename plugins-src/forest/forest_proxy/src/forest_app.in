{
  application, forest,
  [
   {description, "kingsoft of forest deploy"},
   {id, "forest"},
   {vsn, "1.0.0"},

   {modules,
    [forest,
     forest_client_sup, forest_connection_sup,
     forest_fanout_mq_handler, forest_mq_handler,
     forest_msg_dispatch, forest_net, forest_networking,
     forest_node, forest_node_sup, 
     forest_reader, forest_step, forest_target_proc, forest_error,
     forest_sup, forest_utils, forest_target_state,
     supervisor_new,
     tcp_acceptor, tcp_acceptor_sup,
     tcp_listener_sup, tcp_listener
    ]
   },

   {registered,
    [forest_sup, forest_node_sup, forest_client_sup,
     forest_node, forest_fanout_mq_handler, forest_msg_dispatch,
     forest_mq_handler]
   },

   %% {applications, [kernel, stdlib, rabbit_common, amqp_client]},
   {applications, [kernel, stdlib]},
   {mod, {forest, []}},

   {
     env,
     [
      {rabbit_host, "10.20.96.160"},
      {rabbit_listen_port, 5672},

      {deploy_direct_exchange,     <<"deploy.direct">>},
      {deploy_fanout_exchange,     <<"deploy.fanout">>},
      {queue_for_proxy,            <<"deploy.proxy.fanout">>},
      %% {route_key_to_controller,    <<"deploy.control.direct">>},
      {route_key_to_controller,    <<"queue.deploy.proxy.recv">>},
      
      %%{tcp_listener, [63552]},
      {tcp_listener, [{"10.20.96.160", 63552}]},
      {tcp_listen_options,
       [binary,
	{packet,raw},
	{reuseaddr,true},
	{backlog,128},
	{nodelay,true},
	{linger,{true,0}},
	{exit_on_close,false}]}
     ]
   }
  ]
}.
